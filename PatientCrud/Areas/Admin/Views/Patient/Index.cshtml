

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using PagedList.Mvc
@model PagedList.IPagedList<PatientCrud.DTO.PatientDTO>

<main>
    <section class="row" aria-labelledby="aspnetTitle">
        <div class="d-flex flex-row justify-content-between align-items-center mt-5">
            <h1 id="title">Welcome User 👋</h1>
            <a href="@Url.Action("Create", "Patient", new {Area = "Admin"})" class="btn btn-success bg-success text-white p-2 rounded ms-2">Add Drug <i class="ms-1 fa-solid  fa-plus"></i></a>
        </div>

        @*Add alerts based on the stored message on TempData.*@

        <p class="lead mt-4">a sample ASP.NET MVC 5 application that demonstrates CRUD (Create, Read, Update, Delete) operations for patient medication records using multi-layered architecture.</p>
        @if (TempData["DeletedMessage"] != null)
        {
            <div class="alert alert-success mx-2" role="alert">
                @TempData["DeletedMessage"]
            </div>
        }
        @if (TempData["DeletedErrorMessage"] != null)
        {
            <div class="alert alert-danger mx-2" role="alert">
                @TempData["DeletedErrorMessage"]
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success mx-2" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }
    </section>

    @*Create a table for viewing the list of medications.*@

    <div class="table-responsive ">
        <table class="table table-bordered table- table-hover table-striped overflow-auto rounded">
            <caption>List of medications</caption>
            <thead class="bg-dark text-white">
                <tr>
                    <th class="border-bottom border-3 border-secondary">Drug</th>
                    <th class="border-bottom border-3 border-secondary">Dosage</th>
                    <th class="border-bottom border-3 border-secondary">Patient</th>
                    <th class="border-bottom border-3 border-secondary">Date</th>
                    <th class="border-bottom border-3 border-secondary">Actions</th>
                </tr>
            </thead>
            <tbody>
              @if (Model != null && Model.Any()) // If model is empty, proceed to the else block. If have any values,  proceed to the for-loop function
              {
                foreach (var medication in Model)
                {
                  <tr>
                    <td>@medication.Drug</td>
                    <td>@medication.Dosage</td>
                    <td>@medication.Patient</td>
                    <td>@medication.ModifiedDate</td>
                    <td class="text-center">
                      <div class="d-flex justify-content-center flex-sm-row flex-column gap-2">
                        <a href="@Url.Action("Create", "Patient", new { area = "Admin", id = medication.Id })" class="btn btn-primary">Edit</a>
                        <button class="btn btn-danger delete-btn" data-bs-toggle="modal" data-bs-target="#deleteModal-@medication.Id" data-id="@medication.Id">
                          Delete
                        </button>
                      </div>
                    </td>
                  </tr>

                  // Modal for Delete Confirmation
                  <div class="modal fade" id="deleteModal-@medication.Id" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                          Are you sure you want to delete record <strong>@medication.Id</strong> by <strong>@medication.Patient</strong>?
                          <form id="deleteForm-@medication.Id" action="@Url.Action("Delete", "Patient", new { area = "Admin", id = medication.Id })" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@medication.Id" />
                          </form>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                          <button type="submit" form="deleteForm-@medication.Id" class="btn btn-danger">Delete</button>
                        </div>
                      </div>
                    </div>
                  </div>
                }
              }
              else
              {
                <tr>
                  <td colspan="5" class="text-center text-muted">No medications found.</td>
                </tr>
              }
            </tbody>
        </table>
    </div>

    @*Added pagination UI.*@
    <div class="pagination-container d-flex justify-content-between align-items-center mt-3">
        <span class="total-records">Total Records: <span class="bg-danger text-white p-2 px-3 rounded-circle">@Model.TotalItemCount </span></span>
        <div class="pagination-links">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
        </div>
    </div>

</main>